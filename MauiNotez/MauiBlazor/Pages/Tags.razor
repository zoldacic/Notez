@page "/tags"

@using System.Net.Http.Json
@using MauiBlazor.Data;
@using TodoSQLite.Data;
@using TodoSQLite.Models;

@* @inject IDialogService DialogService *@

@* <MudStack>
    <MudDataGrid @ref="mudGrid" Items="@tags" Filterable="false" SortMode="@SortMode.None" Groupable="false" ReadOnly=false EditMode="DataGridEditMode.Form">
        <Columns>
            <PropertyColumn Property="x => x.Text" />
            <TemplateColumn CellClass="d-flex justify-end">
                <CellTemplate>
                    <MudStack Row>
                        <MudButton Size="@Size.Small" Variant="@Variant.Filled" Color="@Color.Primary" @onclick="@(x => OpenEditDialogAsync(x, context.Item))">Edit</MudButton>
                        <MudButton Size="@Size.Small" Variant="@Variant.Filled" Color="@Color.Primary" @onclick="@(x => OpenDeleteDialoGAsync(x, context.Item))">Delete</MudButton>
                    </MudStack>
                </CellTemplate>
            </TemplateColumn>
        </Columns>
    </MudDataGrid>

    <MudStack AlignItems="AlignItems.End">
        <MudButton @onclick="x => OpenEditDialogAsync(x, null)" Variant="Variant.Filled" Color="Color.Primary">
            Add
        </MudButton>
    </MudStack>
</MudStack> *@

@code {

    public IEnumerable<Tag> tags;

    // private MudDataGrid<Tag> mudGrid;

    protected override async Task OnInitializedAsync()
    {
        await LoadTagsAsync();
    }

    protected async Task LoadTagsAsync()
    {
        var repo = new TagRepository();
        tags = await repo.GetTagsAsync();
    }

    private async Task OpenEditDialogAsync(MouseEventArgs args, Tag tag)
    {
        // var parameters = new DialogParameters { };

        // if (tag != null)
        // {
        //     parameters = new DialogParameters { ["tag"] = tag };
        // }

        // var options = new DialogOptions { CloseOnEscapeKey = true };
        // await DialogService.Show<EditTag>("Add tag", parameters, options).Result;
        await LoadTagsAsync();
    }

    private async Task OpenDeleteDialoGAsync(MouseEventArgs args, Tag tag)
    {
        // var parameters = new DialogParameters { };

        // if (tag != null)
        // {
        //     parameters = new DialogParameters { ["tag"] = tag };
        // }

        // var options = new DialogOptions { CloseOnEscapeKey = true };
        // await DialogService.Show<DeleteTag>("Delete tag", parameters, options).Result;
        await LoadTagsAsync();
    }
}
