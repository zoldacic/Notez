@page "/charts"

@using MauiBlazor.Data;
@using Syncfusion.Blazor.Buttons
@using Syncfusion.Blazor.Calendars
@using Syncfusion.Blazor.Cards
@using TodoSQLite.Data;
@using TodoSQLite.Models;

<SfCard>
    <CardContent>
        <SfDatePicker TValue="DateTime?" Placeholder="From date" CssClass="e-outline" Value="fromDate" FloatLabelType="@FloatLabelType.Always" ShowClearButton="true"></SfDatePicker>
        <SfDatePicker TValue="DateTime?" Placeholder="To date" CssClass="e-outline" Value="toDate" FloatLabelType="@FloatLabelType.Always" ShowClearButton="true"></SfDatePicker>

        <TagSelection @ref="tagSelectionRef" item="null" />

        <SfButton Content="Create graph" IsPrimary="true" OnClick="CreateChartAsync" />
    </CardContent>
</SfCard>

@code {
    private TagSelection tagSelectionRef;

    private List<Tag> tags;

    private string[] selectedChips = new string[0];
    private List<ChipItem> chips = new List<ChipItem>();
    private ChipItem chip { set { chips.Add(value); } }

    private DateTime? fromDate;
    private DateTime? toDate;

    protected override async Task OnInitializedAsync()
    {
        var tagRepo = new TagRepository();
        tags = await tagRepo.GetTagsAsync();

        await base.OnInitializedAsync();
    }

    protected async Task CreateChartAsync()
    {
        var selectedTags = tags.Where(t => selectedChips.Any(m => m == t.Text)).ToList();
        var selectedTagIds = selectedTags.Any() ? selectedTags.Select(t => t.ID).ToList() : new List<int>();

        var itemTagRepo = new ItemTagRepository();
        var itemTags = (await itemTagRepo.GetItemTagsAsync()).Where(it => selectedTagIds.Any(t => t == it.TagId)).ToList();

        var itemIds = itemTags.Select(it => it.ItemId).ToList();

        var itemRepo = new TodoItemRepository();
        var items = await itemRepo.GetItemsAsync();

        var selectedItems = items.Where(i => i.AssignedDate >= fromDate && i.AssignedDate <= toDate && itemIds.Any(ii => ii == i.ID)).ToList();
    }
}
 