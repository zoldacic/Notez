@page "/daylies"

@using System.Net.Http.Json
@using MauiBlazor.Data;
@using Syncfusion.Blazor.Buttons
@using Syncfusion.Blazor.Cards
@using Syncfusion.Blazor.Popups
@using TodoSQLite.Data;
@using TodoSQLite.Models;
@using Syncfusion.Blazor.Grids

<SfCard>
<SfGrid DataSource="@items" AllowTextWrap="true" AllowPaging="true">
    <GridColumns>
        <GridColumn Field="@nameof(TodoItem.Name)" HeaderText="Name" Width="190"></GridColumn>
        <GridColumn Field="@nameof(TodoItem.Notes)" HeaderText="Notes" Width="340"></GridColumn>
        <GridColumn HeaderText="Edit">
            <Template>
                @{
                    var item = (context as TodoItem);
                    <div class="image">
                        <SfButton Content="Edit" OnClick="@(x => OpenEditDialog(x, item))"></SfButton>
                        <SfButton Content="Delete" OnClick="@(x => OpenDeleteDialog(x, item))"></SfButton>
                    </div>
                }
            </Template>
        </GridColumn>
    </GridColumns>
</SfGrid>

    <SfButton Content="Add" IconCss="e-icons e-chevron-down-fill" OnClick="@(x => OpenEditDialog(x, null))"></SfButton>
</SfCard>

@if (hasSelectedItemForEdit)
{
    <EditItem @ref="editDialog"
              Item="selectedItem"
              OnItemSaved="@(() => OnEditDialogSubmit())"
              OnItemSaveCancelled="@(() => OnEditDialogCancel())">
    </EditItem>
}

@if (hasSelectedItemForDelete)
{
    <DeleteItem @ref="deleteDialog"
              Item="selectedItem"
              OnItemSaved="@(() => OnDeleteDialogSubmit())"
              OnItemSaveCancelled="@(() => OnDeleteDialogCancel())">
    </DeleteItem>
}

@code {
    private bool hasSelectedItemForEdit = false;
    private bool hasSelectedItemForDelete = false;

    public TodoItem selectedItem;

    public IEnumerable<TodoItem> items;

    private EditItem editDialog;
    private DeleteItem deleteDialog;

    private List<Tag> allTags;
    private List<ItemTag> allItemTags;

    protected override async Task OnInitializedAsync()
    {
        await LoadItems();
    }

    protected async Task LoadItems()
    {
        var repo = new TodoItemRepository();
        await repo.Init();
        items = await repo.GetItemsAsync();

        var tagRepo = new TagRepository();
        allTags = await tagRepo.GetTagsAsync();

        var itemTagRepo = new ItemTagRepository();
        allItemTags = await itemTagRepo.GetItemTagsAsync();
    }

    private void OpenEditDialog(MouseEventArgs args, TodoItem item)
    {
        selectedItem = item;
        hasSelectedItemForEdit = true;
    }

    private void OpenDeleteDialog(MouseEventArgs args, TodoItem item)
    {
        selectedItem = item;
        hasSelectedItemForDelete = true;
    }

    private void OnEditDialogSubmit()
    {
        hasSelectedItemForEdit = false;
    }

    private void OnEditDialogCancel()
    {
        hasSelectedItemForEdit = false;
    }

    private void OnDeleteDialogSubmit()
    {
        hasSelectedItemForEdit = false;
    }

    private void OnDeleteDialogCancel()
    {
        hasSelectedItemForEdit = false;
    }
}