@page "/daylies"

@using System.Net.Http.Json
@using TodoSQLite.Data;
@using TodoSQLite.Models;

@inject IDialogService DialogService

<MudStack>
    <MudDataGrid @ref="mudGrid" Items="@items" Filterable="false" SortMode="@SortMode.None" Groupable="false" ReadOnly=false EditMode="DataGridEditMode.Form">
        <Columns>
            <PropertyColumn Property="x => x.Name" />
            <PropertyColumn Property="x => x.Notes" />
            <TemplateColumn CellClass="d-flex justify-end">
                <CellTemplate>
                    <MudStack Row>
                        <MudButton Size="@Size.Small" Variant="@Variant.Filled" Color="@Color.Primary" @onclick="@(x => OpenEditDialogAsync(x, context.Item))">Edit</MudButton>
                        <MudButton Size="@Size.Small" Variant="@Variant.Filled" Color="@Color.Primary" @onclick="@(x => OpenDeleteDialoGAsync(x, context.Item))">Delete</MudButton>
                    </MudStack>
                </CellTemplate>
            </TemplateColumn>
        </Columns>
    </MudDataGrid>

    <MudStack AlignItems="AlignItems.End">
        <MudButton @onclick="x => OpenEditDialogAsync(x, null)" Variant="Variant.Filled" Color="Color.Primary">
            Add
        </MudButton>
    </MudStack>
</MudStack>

@code {

    public IEnumerable<TodoItem> items;

    private MudDataGrid<TodoItem> mudGrid;

    protected override async Task OnInitializedAsync()
    {
        await LoadItems();
    }

    protected async Task LoadItems()
    {
        var repo = new TodoItemRepository();
        await repo.Init();
        items = await repo.GetItemsAsync();

        if (!items.Any())
        {
            var item = new TodoItem()
                {
                    Name = "Example Item Name",
                    Notes = "Example Item Notes",
                    AssignedDate = DateTime.Now
                };

            await repo.SaveItemAsync(item);
            items = await repo.GetItemsAsync();
        }
    }

    private async Task OpenEditDialogAsync(MouseEventArgs args, TodoItem item)
    {
        var parameters = new DialogParameters { };

        if (item != null)
        {
            parameters = new DialogParameters { ["item"] = item };
        }

        var options = new DialogOptions { CloseOnEscapeKey = true };
        await DialogService.Show<EditItem>("Add item", parameters, options).Result;
        await LoadItems();
    }

    private async Task OpenDeleteDialoGAsync(MouseEventArgs args, TodoItem item)
    {
        var parameters = new DialogParameters { };

        if (item != null)
        {
            parameters = new DialogParameters { ["item"] = item };
        }

        var options = new DialogOptions { CloseOnEscapeKey = true };
        await DialogService.Show<DeleteItem>("Add item", parameters, options).Result;
        await LoadItems();
    }
}