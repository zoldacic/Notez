@page "/import"

@using MauiBlazor.Models;
@using Syncfusion.Blazor.Buttons
@using Syncfusion.Blazor.Cards
@using Syncfusion.Blazor.Grids
@using Syncfusion.XlsIO;
@using System.Dynamic;
@using System.Data;

<SfCard>
    <SfUploader>
        <UploaderEvents ValueChange="@OnFileUploaded"></UploaderEvents>
    </SfUploader>

    <SfGrid DataSource="@items" AllowTextWrap="true" AllowPaging="true">
        <GridColumns>
            <GridColumn Field="@nameof(TodoItem.Name)" HeaderText="Name" Width="190"></GridColumn>
            <GridColumn Field="@nameof(TodoItem.TransactionAmount)" HeaderText="Transaction Amount" Width="140"></GridColumn>
        </GridColumns>
    </SfGrid>

    <SfButton Content="Import" IconCss="e-icons e-chevron-down-fill" OnClick="@(x => Import(x))"></SfButton>
</SfCard>

@code {
    private List<TodoItem> items;

    private async Task OnFileUploaded(UploadChangeEventArgs args)
    {
        foreach (var file in args.Files)
        {
            var path = Path.Combine(FileSystem.Current.CacheDirectory, file.FileInfo.Name);
            ExcelEngine excelEngine = new ExcelEngine();
            IApplication application = excelEngine.Excel;
            application.DefaultVersion = ExcelVersion.Excel2016;


            //create new filestream into above path
            var openFileStream = File.Create(path);

            //write the uploaded memorystream to file stream
            await file.File.OpenReadStream().CopyToAsync(openFileStream);

            //again open the filstream from that path
            var fileStream = File.OpenRead(path);

            //access the workbook from that filtestream
            var workbook = application.Workbooks.Open(fileStream);
            IWorksheet worksheet = workbook.Worksheets[0];
            
            //get datatable from workbook
            var table = worksheet.ExportDataTable(worksheet.UsedRange, ExcelExportDataTableOptions.ColumnNames);
            //convert to dynamic list and append to Grid.
            GenerateListFromTable(table);
        }
    }

    string[] Columns;
    public List<ExpandoObject> CustomerList;
    public void GenerateListFromTable(DataTable input)
    {
        var list = new List<ExpandoObject>();
        Columns = input.Columns.Cast<DataColumn>()
                             .Select(x => x.ColumnName)
                             .ToArray();
        foreach (DataRow row in input.Rows)
        {
            System.Dynamic.ExpandoObject e = new System.Dynamic.ExpandoObject();
            foreach (DataColumn col in input.Columns)
                e.TryAdd(col.ColumnName, row.ItemArray[col.Ordinal]);
            list.Add(e);
        }
        CustomerList = list;
    }

    private void Import(MouseEventArgs args)
    {
        
    }
}
